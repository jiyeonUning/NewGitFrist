


/* < 싱글톤 패턴 >
 
     오직 한 개의 클래스 인스턴스만을 갖도록 보장하게 해주는 패턴
     이에 대한 전역적인 접근점은 재한한다.
 
   < 구현 >
    1. 단일 인스턴스를 유지하기 위해, 생성자의 접근 권한을 외부에서 생성할 수 없도록 제한 시킨다.
    2. 단일 인스턴스를 보관할 정적 변수를 구성한다.
    3. 외부에서 접근이 가능한 ' GetInstance ' 함수를 구성한다.
    4. GetInstance 함수에서 단일 인스턴스가 없을 경우, 인스턴스를 생성하여 정적 변수에 참조 시킨다.
    5. GetInstance 함수에서 단일 인스턴스가 있을 경우, 정적 변수에 참조된 인스턴스를 반환한다.
 
   < 장점 >
    1. 싱글톤 패턴은 단 하나 뿐인 존재로, 주요 클래스 & 관리자 역할에 적합하다.
    2. 전역적 접근으로, 참조에 필요한 작업 없이 빠른 접근이 가능하다
    3. 인스턴스들이 싱글톤 패턴을 통하여 데이터를 공유하기 쉬워진다.
   
   < 주의점 >
    1. 싱글톤 패턴은 너무 많은 책임을 짊어지는 경우가 많아. 단일책임원칙을 위반한다.
    2. 싱글톤 패턴은 전역적 접근으로 인해 코드의 결합도를 높이므로, 남발하지 않아야 한다.
    3. 위 사항과 이어지는 것으로, 같은 이유로 싱글톤 패턴은 단위 테스트를 시도하기 어렵게 만든다.

 */

